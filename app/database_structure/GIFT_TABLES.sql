--Gift Details View for SELECT--
create or replace view MY_FLOW.PRESENTATION.VIEW_GIFT_DETAILS(
	GIFT_ID,
	MERCHANT_NAME,
	KAM_NAME,
	KAM_EMAIL,
	CREATED_DATE,
	WORKFLOW_STATUS,
	MEMBER_LOGIN,
	FULL_NAME,
	PHONE,
	ADDRESS,
	REWARD_NAME,
	GIFT_ITEM,
	COST_BASE,
	CURRENCY,
	COST_LOCAL,
	REMARK,
	REWARD_CLUB_ORDER,
	CATEGORY,
	MANAGER_NAME,
	MANAGER_EMAIL,
	REJECT_REASON,
	DISPATCHER,
	TRACKING_CODE,
	TRACKING_STATUS,
	MKTOPS_NAME,
	MKTOPS_EMAIL,
	MKT_PURCHASE_DATE,
	UPLOADED_BO,
	MKT_PROOF,
	KAM_PROOF,
	KAM_PROOF_NAME,
	KAM_PROOF_EMAIL,
	GIFT_FEEDBACK,
	AUDITER_NAME,
	AUDITER_EMAIL,
	AUDIT_DATE,
	AUDIT_REMARK,
	LAST_MODIFIED_DATE
) as
SELECT
    GD.GIFT_ID,
    REF.DESCRIPTION        AS MERCHANT_NAME,
    U.NAME                 AS KAM_NAME,
    U.EMAIL                AS KAM_EMAIL,
    GD.CREATED_DATE,
    GD.WORKFLOW_STATUS,
    GD.MEMBER_LOGIN,
    GD.FULL_NAME,
    GD.PHONE,
    GD.ADDRESS,
    GD.REWARD_NAME,
    GD.GIFT_ITEM,
    GD.COST_BASE,
    GD.CURRENCY,
    GD.COST_LOCAL,
    GD.REMARK,
    GD.REWARD_CLUB_ORDER,
    GD.CATEGORY,
    U2.NAME                AS MANAGER_NAME,
    U2.EMAIL               AS MANAGER_EMAIL,
    GD.REJECT_REASON,
    GD.DISPATCHER,
    GD.TRACKING_CODE,
    GD.TRACKING_STATUS,
    U3.NAME                AS MKTOPS_NAME,
    U3.EMAIL               AS MKTOPS_EMAIL,
    GD.MKT_PURCHASE_DATE,
    GD.UPLOADED_BO,
    GD.MKT_PROOF,
    GD.KAM_PROOF,
    U4.NAME                AS KAM_PROOF_NAME,
    U4.EMAIL               AS KAM_PROOF_EMAIL,
    GD.GIFT_FEEDBACK,
    U5.NAME                AS AUDITER_NAME,
    U5.EMAIL               AS AUDITER_EMAIL,
    GD.AUDIT_DATE,
    GD.AUDIT_REMARK,
    GD.LAST_MODIFIED_DATE
FROM MY_FLOW.PUBLIC.GIFT_DETAILS GD
INNER JOIN MY_FLOW.GLOBAL_CONFIG.SYS_USER_INFO U
    ON GD.KAM_REQUESTED_BY = U.USER_ID
INNER JOIN MY_FLOW.GLOBAL_CONFIG.SYS_USER_INFO U2
    ON GD.APPROVAL_REVIEWED_BY = U2.USER_ID
INNER JOIN MY_FLOW.GLOBAL_CONFIG.SYS_USER_INFO U3
    ON GD.PURCHASED_BY = U3.USER_ID
INNER JOIN MY_FLOW.GLOBAL_CONFIG.SYS_USER_INFO U4
    ON GD.KAM_PROOF_BY = U4.USER_ID
INNER JOIN MY_FLOW.GLOBAL_CONFIG.SYS_USER_INFO U5
    ON GD.AUDITED_BY = U5.USER_ID
INNER JOIN MY_FLOW.GLOBAL_CONFIG.REFERENCE_TABLE REF
    ON GD.MERCHANT_ID = REF.CODE
WHERE GD.BATCH_ID IS NULL
   OR GD.BATCH_ID IN (
        SELECT BATCH_ID
        FROM MY_FLOW.PUBLIC.BULK_IMPORT_BATCHES
        WHERE IS_ACTIVE = TRUE
    );

-- Create & Update any changes to the gift tables here
create or replace TABLE MY_FLOW.PUBLIC.GIFT_DETAILS (
	GIFT_ID NUMBER(38,0) NOT NULL autoincrement start 100 increment 1 order,
	BATCH_ID NUMBER(38,0),
	KAM_REQUESTED_BY VARCHAR(16777216),
	CREATED_DATE TIMESTAMP_NTZ(9),
	WORKFLOW_STATUS VARCHAR(16777216),
	MEMBER_LOGIN VARCHAR(16777216),
	REWARD_NAME VARCHAR(16777216),
	GIFT_ITEM VARCHAR(16777216),
	COST_BASE NUMBER(38,0),
	CURRENCY VARCHAR(16777216),
	COST_LOCAL NUMBER(38,0),
	REMARK VARCHAR(16777216),
	REWARD_CLUB_ORDER VARCHAR(16777216),
	CATEGORY VARCHAR(16777216),
	APPROVAL_REVIEWED_BY VARCHAR(16777216),
	DISPATCHER VARCHAR(16777216),
	TRACKING_CODE VARCHAR(16777216),
	TRACKING_STATUS VARCHAR(16777216),
	PURCHASED_BY VARCHAR(16777216),
	MKT_PURCHASE_DATE TIMESTAMP_NTZ(9),
	UPLOADED_BO BOOLEAN,
	MKT_PROOF VARCHAR(16777216),
	KAM_PROOF VARCHAR(16777216),
	KAM_PROOF_BY VARCHAR(16777216),
	GIFT_FEEDBACK VARCHAR(16777216),
	AUDITED_BY VARCHAR(16777216),
	AUDIT_DATE TIMESTAMP_NTZ(9),
	AUDIT_REMARK VARCHAR(16777216),
	LAST_MODIFIED_DATE TIMESTAMP_NTZ(9),
	REJECT_REASON VARCHAR(16777216),
	primary key (GIFT_ID)
);

--Gift Workflow Timeline
create or replace TABLE MY_FLOW.PUBLIC.GIFT_WORKFLOW_TIMELINE (
	ID NUMBER(38,0) NOT NULL autoincrement start 100 increment 1 order,
	GIFT_ID NUMBER(38,0),
	FROM_STATUS VARCHAR(16777216),
	TO_STATUS VARCHAR(16777216),
	CHANGED_BY NUMBER(38,0),
	CHANGED_AT TIMESTAMP_NTZ(9),
	REMARK VARCHAR(16777216),
	primary key (ID)
);

--BULK IMPORT FEATURE BATCHES --
create or replace TABLE MY_FLOW.PUBLIC.BULK_IMPORT_BATCHES (
	BATCH_ID NUMBER(38,0) NOT NULL autoincrement start 10 increment 1 order,
	BATCH_NAME VARCHAR(200),
	UPLOADED_BY VARCHAR(100),
	TOTAL_ROWS NUMBER(38,0),
	CREATED_DATE TIMESTAMP_NTZ(9),
	COMPLETED_AT TIMESTAMP_NTZ(9),
	IS_ACTIVE BOOLEAN,
	primary key (BATCH_ID)
);